@page "/LibrarianDashboard"

@using LibaryManagementSystem.Services
@using LibaryManagementSystem.Data
@inject Librarian librarian
@inject BookList bookList
@inject StudentList studentList

<head>
    <title>Librarian Dashboard</title>
</head>

<style>
    body {
        background-color: black;
        color: white;
        margin: 0;
        padding: 0;
        height: 100vh;

        h1 {
            text-align: center;
            position: fixed;
            top: 2%;
            left: 40%;
            margin: 2vw;
            z-index: 1 !important;
        }

        h3 {
            text-align: center;
            position: fixed;
            top: 7%;
            left: 40%;
            margin: 2vw;
            z-index: 1 !important;
        }

        .dashboardHolder {
            top: 1%;
            left: 10%;
            position: absolute;
            margin-top: 10% !important;
            background-color: rgba(255, 0, 251, 0.131);
            padding: 5vw;
            border-radius: 3vw;
            width: 70%;
            z-index: 10 !important;
        }

        .dashboardHolderSelected {
            top: 1%;
            left: 10%;
            position: absolute;
            margin-top: 10% !important;
            background-color: rgba(255, 0, 251, 0.131);
            padding: 5vw;
            border-radius: 3vw;
            width: 70%;
            z-index: 10 !important;
            display: flex;
            transition: all .5s ease-in-out;
        }

        li {
            margin: 2vw;
            position: relative;
            text-align: left;
            border-radius: 10px;
            padding: 12px;
            transition: all .3s ease-in-out;
            user-select: none !important;

            &:hover {
                cursor: pointer;
                background-color: #3651d42e;
                text-align: center;
                color: rgba(101, 223, 93, 0.949);
            }
        }

        .RemoveStd {
            color: red;

            &:hover {
                background-color: #ff00002e;
                color: fuchsia;
            }

        }
    }

    .addBookWrapper {
        display: flex !important;
        flex-direction: column;
        gap: 10px;
        align-items: center;
        margin-top: 50px !important;
    }



    input {
        width: 32.7vw;
        height: 5vh;
        box-shadow: 0px 0px 5px;
        border-radius: 7px;

        &:hover {
            background-color: transparent;
            color: #14ff03;
        }
    }

    .returnTOHomeMainPage {
        text-align: center;
        z-index: 1000 !important;
    }


    .HomeBack {
        text-decoration: none;
        color: white;
        margin: 1.5vw;
        padding: 2vw;
        border-radius: 50%;
        position: fixed;
    }

    .close {
        width: 13px;
        height: 13px;
        border-radius: 50%;
        background-color: red;
        z-index: 100000;
    }

    .popup {
        z-index: 100000;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        box-shadow: 0px 0px 0px 60px rgba(10, 10, 10, 0.396);
        padding: 20px;
        border-radius: 10px;
        background-color: transparent;
        backdrop-filter: blur(2.6px);
        background: linear-gradient(120deg, #b32c408d, #0fa54452) !important;
        background-size: 100px;
        color: white;
        width: 90vw;
        height: 90vh;
    }
    .error-toast {
    position: fixed;
    top: 10px;
    right: 10px;
    background: red;
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    box-shadow: 0px 0px 5px rgba(0,0,0,0.3);
}


    table {
        margin-top: 4%;
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    th {
        background-color: #0d0d0da7;
        user-select: none !important;

    }

    td,
    th {
        border: 1px solid #000000;
        text-align: center;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #e1e34421;
    }
</style>

@if (librarian.canLogin)
{
    <a href="/" class="HomeBack">
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-house-door-fill"
        viewBox="0 0 16 16">
        <path
            d="M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5" />
    </svg>
</a>

    <body>
    <h1>Librarian Dashboard</h1>
    <br>
    <h3>welcome @librarian.LibrarianId</h3>
    <div class="wrapper">
        <ul type="circle" class="@isStyleSelected">
            <li @onclick="addBook" class="addBook">Add book</li>
            <li @onclick="removeBook" class="removeBook ">Remove book</li>
            <li @onclick="searchBook" class="searchBook ">Search book</li>
            <li @onclick="viewStudents" class="viewStudents ">View Students</li>
            <li @onclick="editStudentsDetails" class="editStudentsDetails ">Edit Students Details</li>
            <li class="RemoveStd">Remove Students</li>
        </ul>
    </div>

    @if (isAddBookClicked)
        {
            <div class="popup">
                <div class="act close" @onclick:stopPropagation @onclick="close"></div>
                <div class="addBookWrapper">
                    @librarian.LibrarianId <span>fill up the following data</span>
                    @if (didErrorGenerated)
                    {
                        @if (didErrorGenerated)
{
    <span class="error-toast">
        @errorMessage
    </span>
}
                    }
                    <input type="text" placeholder="Enter the books ID" @bind="BookId">
                    <input type="text" placeholder="Enter the books NAME" @bind="BookName">
                    <input type="text" placeholder="Enter the books Author name" @bind="BookAuthor">
                    <input type="text" placeholder="Enter the Release data org book" @bind="BookReleaseDate">
                    <input type="number" min="1" placeholder="HowManyBooks will you add ?" @bind="HowManyBooks">
                    <input type="submit" @onclick="AddBookToDB" value="ADD DATA">
                </div>
            </div>

        }@if (isRemovedBookClicked)
        {
            <div class="popup">
                <div class="act close" @onclick:stopPropagation @onclick="close"></div>

            </div>
        }
        @if (isSearchBookClicked)
        {
            <div class="popup">
                <div class="act close" @onclick:stopPropagation @onclick="close"></div>
                <div class="searchBookWrapper">
                    <table>
                        <tr>
                            <th>BookId</th>
                            <th>BookName</th>
                            <th>BookAuthor</th>
                            <th>BookReleaseDate</th>
                            <th>HowManyBooks</th>
                        </tr>
                        @foreach (var i in bookList.book)
                        {
                            <tr>
                                <td>@i.BookId</td>
                                <td>@i.BookName</td>
                                <td>@i.BookAuthor</td>
                                <td>@i.BookReleaseDate</td>
                                <td>@i.HowManyBooks</td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        } @if (isViewStudentsClicked)
        {
            <div class="popup">
                <div class="act close" @onclick:stopPropagation @onclick="close"></div>
                <div class="viewStudentWrapper">
                    <table>
                        <tr>
                            <th>Student Id</th>
                            <th>Student Name</th>
                            <th>Class</th>
                            <th>Address</th>
                        </tr>
                        @foreach (var i in studentList.student)
                        {
                            <tr>
                                <td>@i.Id</td>
                                <td>@i.Name</td>
                                <td>@i.Class</td>
                                <td>@i.Address</td>
                            </tr>
                        }
                    </table>
                </div>

            </div>
        } @if (isEditStudentsDetailsClicked)
        {
            <div class="popup">
                <div class="act close" @onclick:stopPropagation @onclick="close"></div>

            </div>
        }
        <script src="/_framework/aspnetcore-browser-refresh.js"></script>
    </body>
}
else
{
    <h1 class="returnTOHomeMainPage"> <a href="/LibrarianLogin">Return to Login Page</a> </h1>
}

@code {
    private string isStyleSelected = "dashboardHolder";
    private bool isAddBookClicked = false;
    private bool isRemovedBookClicked = false;
    private bool isSearchBookClicked = false;
    private bool isViewStudentsClicked = false;
    private bool isEditStudentsDetailsClicked = false;
    private bool isRemoveStudentClicked = false;
    private string BookId = string.Empty;
    private string BookName = string.Empty;
    private string BookAuthor = string.Empty;
    private string BookReleaseDate = string.Empty;
    private int HowManyBooks;
    private string errorMessage = string.Empty;
    private bool didErrorGenerated = false;

    private void addBook()
    {
        librarian.canLogin = true;
        isAddBookClicked = true;
        isStyleSelected = "dashboardHolderSelected";
    }
    private void AddBookToDB()
    {

        if (BookId != "" && BookName != "" && BookAuthor != "" && BookReleaseDate != "" && HowManyBooks > 0)
        {
            bookList.book.Add(
            new Books()
                {
                    BookId = BookId,
                    BookName = BookName,
                    BookAuthor = BookAuthor,
                    BookReleaseDate = BookReleaseDate,
                    HowManyBooks = HowManyBooks
                }
            );
            clear();
            return;
        }
        else if (HowManyBooks <= 0)
        {
            didErrorGenerated = true;
            errorMessage = "You cannot add less than 1 book in the Library";
            return;
        }
        didErrorGenerated = true;
        errorMessage = "Please fill in all fields correctly.";
    }
    private void removeBook()
    {
        librarian.canLogin = true;
        isRemovedBookClicked = true;
        isStyleSelected = "dashboardHolderSelected";
    }
    private void searchBook()
    {
        librarian.canLogin = true;
        isStyleSelected = "dashboardHolderSelected";
        isSearchBookClicked = true;
    }
    private void viewStudents()
    {
        librarian.canLogin = true;
        isViewStudentsClicked = true;
        isStyleSelected = "dashboardHolderSelected";
    }
    private void editStudentsDetails()
    {
        librarian.canLogin = true;
        isEditStudentsDetailsClicked = true;
        isStyleSelected = "dashboardHolderSelected";
    }
    private void clear()
    {
        BookId = string.Empty;
        BookName = string.Empty;
        BookReleaseDate = string.Empty;
        BookAuthor = string.Empty;
        HowManyBooks = 1;
        errorMessage = string.Empty;
        didErrorGenerated = false;
    }
    private void close()
    {
        isAddBookClicked = false;
        isEditStudentsDetailsClicked = false;
        isViewStudentsClicked = false;
        isSearchBookClicked = false;
        isRemovedBookClicked = false;
        isStyleSelected = "dashboardHolder";
        clear();
        StateHasChanged();
    }
}
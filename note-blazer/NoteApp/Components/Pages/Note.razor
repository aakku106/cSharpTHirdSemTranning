@page "/Note"
@rendermode InteractiveServer

<style>
    body {
        background-color: #17c79b33;
    }

    h1 {
        background-color: rebeccapurple !important;
        text-align: center;
        box-shadow: 0px 0px 10px #e32551fd;
        color: #ffffff;
    }

    ul {
        text-decoration: none;
        list-style: none;
    }

    .border {
        border: 2px solid red;
    }

    .center {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-self: center;
        margin-top: 2vw;
        background-color: #1e763e37;
        box-shadow: 0px 0px 12px 3px #567cdc4d;
        padding: 2vw;
        text-align: center;
    }


    .round {
        border-radius: 1vw !important;
    }

    .input {
        padding: 1vw;
        box-shadow: 0px 0px 10px salmon;
    }

    .title {
        font-size: 2rem;
        font-weight: 900;

    }

    .description {
        font-weight: 900;
        font-size: 2rem;
    }

    .AddNote {
        padding: 1.5vw;
        border-radius: 3vw;
        margin-top: 2%;
    }

    .noteArea {
        width: 50vw;
        height: 40vw;
        display: none;
    }
.displayRapper{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap-reverse;
}
    .AddedNote {
        @* width: auto; *@
        max-width: fit-content;
        background-color: #282825a3;
        margin: 2vw;
        border-radius: 1vw;
        padding: 1vw !important;
        box-shadow: 0px 0px 10px;
        text-align: left;
        transition: all .7s ease-in-out;

            &:hover{
                cursor: pointer;
                background-color: #dbdb25af !important;
                box-shadow: 0px 0px 10px #dbdb25ec;

                .titL{
                    color: rgb(22, 109, 14);  
                }
                .dec{
                    color: black;
                }
                .hideShow{
                    display: inline;
                }
            }
    }

    .titL {
        font-size: 2.3rem;
        padding: 1vw !important;
        text-align: center;
                transition: all .3s ease-in-out;
        &:hover{
          
        }

    }
    .dec {
        padding: 1vw !important;
        font-size: 0.8rem;
        color: rgb(192, 182, 182);
                transition: all .3s ease-in-out;
    }
    .cBtt{
        margin: 1vw;
    }



    .hideShow{
        display: @h_s;
    }
</style>

<h1 class="round p-3 caT">NOTE: @counter </h1>
<article class="border container center round ">
    @* <form> *@
    <div class="title">
        <p>Title</p>
        <input type="text " class="round input" @bind="title" placeholder="Enter the title of note" >
    </div>
    <div class="description round">
        <p>description</p>
        <textarea class="round input" @bind="description" placeholder="ENter the description of the note " ></textarea>
    </div>
    <button class="AddNote btn-primary" @onclick="addClick">AddNote</button>
    @* </form> *@
</article>
<div class="displayRapper">

    @foreach (var i in ListNote)
    {
        
        <ul class="AddedNote">
            <li class="titL">@i.Counter
                <u>
                        <input type="checkbox" class="hideShow cBtt"  @bind="i.IsTicked" >
                    @if(i.IsTicked&&!i.IsEdit){
                                <strike>
                                    @i.Title  
                                </strike>
                            <button class="btn btn-outline-danger round cBtt" @onclick="()=>clear(i)" >Done</button> 
                        }else if(!i.IsEdit&&!i.IsTicked){
                            @i.Title  
                            <button class="btn btn-outline-success round cBtt hideShow " @onclick="()=>edit(i)" >Edit</button> 
                        }else if(i.IsEdit&&!i.IsTicked){
                                <input @bind="i.Title">
                            <button class="btn btn-outline-primary round cBtt hideShow" @onclick="()=>edit(i)" >Save</button> 
                        }else{
                            <strike>
                                @i.Title  
                            </strike>
                            <button class="btn btn-outline-danger round cBtt" @onclick="()=>clear(i)" >Done</button> 
                        }
                </u>
            </li>
            <li class="dec"> <span> @i.Description</span></li>
        </ul>
    }
</div>

@code {
    static int counter=1;
    string title = string.Empty;
    string description = string.Empty;
    private string h_s="none";
    private static List<NoteApp.Note> ListNote = new List<NoteApp.Note>();
    public void addClick()
    {
        if (title != "" && description != "")
        {
            ListNote.Add(new NoteApp.Note(title, description,counter));
            counter++;
        }
    }
    void clear(NoteApp.Note n)
    {
        ListNote.Remove(n);
    }
    void edit(NoteApp.Note e){
        e.IsEdit=!e.IsEdit;
    }

}